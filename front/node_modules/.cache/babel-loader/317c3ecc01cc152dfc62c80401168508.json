{"ast":null,"code":"var $ = require('../internals/export');\n\nvar hasOwn = require('../internals/has-own-property');\n\nvar isSymbol = require('../internals/is-symbol');\n\nvar tryToString = require('../internals/try-to-string');\n\nvar shared = require('../internals/shared');\n\nvar NATIVE_SYMBOL_REGISTRY = require('../internals/native-symbol-registry');\n\nvar SymbolToStringRegistry = shared('symbol-to-string-registry'); // `Symbol.keyFor` method\n// https://tc39.es/ecma262/#sec-symbol.keyfor\n\n$({\n  target: 'Symbol',\n  stat: true,\n  forced: !NATIVE_SYMBOL_REGISTRY\n}, {\n  keyFor: function keyFor(sym) {\n    if (!isSymbol(sym)) throw TypeError(tryToString(sym) + ' is not a symbol');\n    if (hasOwn(SymbolToStringRegistry, sym)) return SymbolToStringRegistry[sym];\n  }\n});","map":{"version":3,"sources":["E:/gitTest/campus-bbs/front/node_modules/_core-js@3.22.1@core-js/modules/es.symbol.key-for.js"],"names":["$","require","hasOwn","isSymbol","tryToString","shared","NATIVE_SYMBOL_REGISTRY","SymbolToStringRegistry","target","stat","forced","keyFor","sym","TypeError"],"mappings":"AAAA,IAAIA,CAAC,GAAGC,OAAO,CAAC,qBAAD,CAAf;;AACA,IAAIC,MAAM,GAAGD,OAAO,CAAC,+BAAD,CAApB;;AACA,IAAIE,QAAQ,GAAGF,OAAO,CAAC,wBAAD,CAAtB;;AACA,IAAIG,WAAW,GAAGH,OAAO,CAAC,4BAAD,CAAzB;;AACA,IAAII,MAAM,GAAGJ,OAAO,CAAC,qBAAD,CAApB;;AACA,IAAIK,sBAAsB,GAAGL,OAAO,CAAC,qCAAD,CAApC;;AAEA,IAAIM,sBAAsB,GAAGF,MAAM,CAAC,2BAAD,CAAnC,C,CAEA;AACA;;AACAL,CAAC,CAAC;AAAEQ,EAAAA,MAAM,EAAE,QAAV;AAAoBC,EAAAA,IAAI,EAAE,IAA1B;AAAgCC,EAAAA,MAAM,EAAE,CAACJ;AAAzC,CAAD,EAAoE;AACnEK,EAAAA,MAAM,EAAE,SAASA,MAAT,CAAgBC,GAAhB,EAAqB;AAC3B,QAAI,CAACT,QAAQ,CAACS,GAAD,CAAb,EAAoB,MAAMC,SAAS,CAACT,WAAW,CAACQ,GAAD,CAAX,GAAmB,kBAApB,CAAf;AACpB,QAAIV,MAAM,CAACK,sBAAD,EAAyBK,GAAzB,CAAV,EAAyC,OAAOL,sBAAsB,CAACK,GAAD,CAA7B;AAC1C;AAJkE,CAApE,CAAD","sourcesContent":["var $ = require('../internals/export');\nvar hasOwn = require('../internals/has-own-property');\nvar isSymbol = require('../internals/is-symbol');\nvar tryToString = require('../internals/try-to-string');\nvar shared = require('../internals/shared');\nvar NATIVE_SYMBOL_REGISTRY = require('../internals/native-symbol-registry');\n\nvar SymbolToStringRegistry = shared('symbol-to-string-registry');\n\n// `Symbol.keyFor` method\n// https://tc39.es/ecma262/#sec-symbol.keyfor\n$({ target: 'Symbol', stat: true, forced: !NATIVE_SYMBOL_REGISTRY }, {\n  keyFor: function keyFor(sym) {\n    if (!isSymbol(sym)) throw TypeError(tryToString(sym) + ' is not a symbol');\n    if (hasOwn(SymbolToStringRegistry, sym)) return SymbolToStringRegistry[sym];\n  }\n});\n"]},"metadata":{},"sourceType":"script"}