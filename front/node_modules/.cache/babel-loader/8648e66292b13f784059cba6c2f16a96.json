{"ast":null,"code":"'use strict';\n\nvar ArrayBufferViewCore = require('../internals/array-buffer-view-core');\n\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\n\nvar toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\n\nvar aTypedArray = ArrayBufferViewCore.aTypedArray;\nvar exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod; // `%TypedArray%.prototype.at` method\n// https://github.com/tc39/proposal-relative-indexing-method\n\nexportTypedArrayMethod('at', function at(index) {\n  var O = aTypedArray(this);\n  var len = lengthOfArrayLike(O);\n  var relativeIndex = toIntegerOrInfinity(index);\n  var k = relativeIndex >= 0 ? relativeIndex : len + relativeIndex;\n  return k < 0 || k >= len ? undefined : O[k];\n});","map":{"version":3,"sources":["E:/gitTest/forum/front/node_modules/_core-js@3.21.1@core-js/modules/es.typed-array.at.js"],"names":["ArrayBufferViewCore","require","lengthOfArrayLike","toIntegerOrInfinity","aTypedArray","exportTypedArrayMethod","at","index","O","len","relativeIndex","k","undefined"],"mappings":"AAAA;;AACA,IAAIA,mBAAmB,GAAGC,OAAO,CAAC,qCAAD,CAAjC;;AACA,IAAIC,iBAAiB,GAAGD,OAAO,CAAC,mCAAD,CAA/B;;AACA,IAAIE,mBAAmB,GAAGF,OAAO,CAAC,qCAAD,CAAjC;;AAEA,IAAIG,WAAW,GAAGJ,mBAAmB,CAACI,WAAtC;AACA,IAAIC,sBAAsB,GAAGL,mBAAmB,CAACK,sBAAjD,C,CAEA;AACA;;AACAA,sBAAsB,CAAC,IAAD,EAAO,SAASC,EAAT,CAAYC,KAAZ,EAAmB;AAC9C,MAAIC,CAAC,GAAGJ,WAAW,CAAC,IAAD,CAAnB;AACA,MAAIK,GAAG,GAAGP,iBAAiB,CAACM,CAAD,CAA3B;AACA,MAAIE,aAAa,GAAGP,mBAAmB,CAACI,KAAD,CAAvC;AACA,MAAII,CAAC,GAAGD,aAAa,IAAI,CAAjB,GAAqBA,aAArB,GAAqCD,GAAG,GAAGC,aAAnD;AACA,SAAQC,CAAC,GAAG,CAAJ,IAASA,CAAC,IAAIF,GAAf,GAAsBG,SAAtB,GAAkCJ,CAAC,CAACG,CAAD,CAA1C;AACD,CANqB,CAAtB","sourcesContent":["'use strict';\nvar ArrayBufferViewCore = require('../internals/array-buffer-view-core');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\nvar toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\n\nvar aTypedArray = ArrayBufferViewCore.aTypedArray;\nvar exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;\n\n// `%TypedArray%.prototype.at` method\n// https://github.com/tc39/proposal-relative-indexing-method\nexportTypedArrayMethod('at', function at(index) {\n  var O = aTypedArray(this);\n  var len = lengthOfArrayLike(O);\n  var relativeIndex = toIntegerOrInfinity(index);\n  var k = relativeIndex >= 0 ? relativeIndex : len + relativeIndex;\n  return (k < 0 || k >= len) ? undefined : O[k];\n});\n"]},"metadata":{},"sourceType":"script"}