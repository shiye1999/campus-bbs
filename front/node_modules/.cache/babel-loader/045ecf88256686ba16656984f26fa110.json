{"ast":null,"code":"'use strict';\n\nvar $ = require('../internals/export');\n\nvar call = require('../internals/function-call');\n\nvar aCallable = require('../internals/a-callable');\n\nvar newPromiseCapabilityModule = require('../internals/new-promise-capability');\n\nvar perform = require('../internals/perform');\n\nvar iterate = require('../internals/iterate');\n\nvar PROMISE_STATICS_INCORRECT_ITERATION = require('../internals/promise-statics-incorrect-iteration'); // `Promise.all` method\n// https://tc39.es/ecma262/#sec-promise.all\n\n\n$({\n  target: 'Promise',\n  stat: true,\n  forced: PROMISE_STATICS_INCORRECT_ITERATION\n}, {\n  all: function all(iterable) {\n    var C = this;\n    var capability = newPromiseCapabilityModule.f(C);\n    var resolve = capability.resolve;\n    var reject = capability.reject;\n    var result = perform(function () {\n      var $promiseResolve = aCallable(C.resolve);\n      var values = [];\n      var counter = 0;\n      var remaining = 1;\n      iterate(iterable, function (promise) {\n        var index = counter++;\n        var alreadyCalled = false;\n        remaining++;\n        call($promiseResolve, C, promise).then(function (value) {\n          if (alreadyCalled) return;\n          alreadyCalled = true;\n          values[index] = value;\n          --remaining || resolve(values);\n        }, reject);\n      });\n      --remaining || resolve(values);\n    });\n    if (result.error) reject(result.value);\n    return capability.promise;\n  }\n});","map":{"version":3,"sources":["E:/gitTest/campus-bbs/front/node_modules/_core-js@3.22.1@core-js/modules/es.promise.all.js"],"names":["$","require","call","aCallable","newPromiseCapabilityModule","perform","iterate","PROMISE_STATICS_INCORRECT_ITERATION","target","stat","forced","all","iterable","C","capability","f","resolve","reject","result","$promiseResolve","values","counter","remaining","promise","index","alreadyCalled","then","value","error"],"mappings":"AAAA;;AACA,IAAIA,CAAC,GAAGC,OAAO,CAAC,qBAAD,CAAf;;AACA,IAAIC,IAAI,GAAGD,OAAO,CAAC,4BAAD,CAAlB;;AACA,IAAIE,SAAS,GAAGF,OAAO,CAAC,yBAAD,CAAvB;;AACA,IAAIG,0BAA0B,GAAGH,OAAO,CAAC,qCAAD,CAAxC;;AACA,IAAII,OAAO,GAAGJ,OAAO,CAAC,sBAAD,CAArB;;AACA,IAAIK,OAAO,GAAGL,OAAO,CAAC,sBAAD,CAArB;;AACA,IAAIM,mCAAmC,GAAGN,OAAO,CAAC,kDAAD,CAAjD,C,CAEA;AACA;;;AACAD,CAAC,CAAC;AAAEQ,EAAAA,MAAM,EAAE,SAAV;AAAqBC,EAAAA,IAAI,EAAE,IAA3B;AAAiCC,EAAAA,MAAM,EAAEH;AAAzC,CAAD,EAAiF;AAChFI,EAAAA,GAAG,EAAE,SAASA,GAAT,CAAaC,QAAb,EAAuB;AAC1B,QAAIC,CAAC,GAAG,IAAR;AACA,QAAIC,UAAU,GAAGV,0BAA0B,CAACW,CAA3B,CAA6BF,CAA7B,CAAjB;AACA,QAAIG,OAAO,GAAGF,UAAU,CAACE,OAAzB;AACA,QAAIC,MAAM,GAAGH,UAAU,CAACG,MAAxB;AACA,QAAIC,MAAM,GAAGb,OAAO,CAAC,YAAY;AAC/B,UAAIc,eAAe,GAAGhB,SAAS,CAACU,CAAC,CAACG,OAAH,CAA/B;AACA,UAAII,MAAM,GAAG,EAAb;AACA,UAAIC,OAAO,GAAG,CAAd;AACA,UAAIC,SAAS,GAAG,CAAhB;AACAhB,MAAAA,OAAO,CAACM,QAAD,EAAW,UAAUW,OAAV,EAAmB;AACnC,YAAIC,KAAK,GAAGH,OAAO,EAAnB;AACA,YAAII,aAAa,GAAG,KAApB;AACAH,QAAAA,SAAS;AACTpB,QAAAA,IAAI,CAACiB,eAAD,EAAkBN,CAAlB,EAAqBU,OAArB,CAAJ,CAAkCG,IAAlC,CAAuC,UAAUC,KAAV,EAAiB;AACtD,cAAIF,aAAJ,EAAmB;AACnBA,UAAAA,aAAa,GAAG,IAAhB;AACAL,UAAAA,MAAM,CAACI,KAAD,CAAN,GAAgBG,KAAhB;AACA,YAAEL,SAAF,IAAeN,OAAO,CAACI,MAAD,CAAtB;AACD,SALD,EAKGH,MALH;AAMD,OAVM,CAAP;AAWA,QAAEK,SAAF,IAAeN,OAAO,CAACI,MAAD,CAAtB;AACD,KAjBmB,CAApB;AAkBA,QAAIF,MAAM,CAACU,KAAX,EAAkBX,MAAM,CAACC,MAAM,CAACS,KAAR,CAAN;AAClB,WAAOb,UAAU,CAACS,OAAlB;AACD;AA1B+E,CAAjF,CAAD","sourcesContent":["'use strict';\nvar $ = require('../internals/export');\nvar call = require('../internals/function-call');\nvar aCallable = require('../internals/a-callable');\nvar newPromiseCapabilityModule = require('../internals/new-promise-capability');\nvar perform = require('../internals/perform');\nvar iterate = require('../internals/iterate');\nvar PROMISE_STATICS_INCORRECT_ITERATION = require('../internals/promise-statics-incorrect-iteration');\n\n// `Promise.all` method\n// https://tc39.es/ecma262/#sec-promise.all\n$({ target: 'Promise', stat: true, forced: PROMISE_STATICS_INCORRECT_ITERATION }, {\n  all: function all(iterable) {\n    var C = this;\n    var capability = newPromiseCapabilityModule.f(C);\n    var resolve = capability.resolve;\n    var reject = capability.reject;\n    var result = perform(function () {\n      var $promiseResolve = aCallable(C.resolve);\n      var values = [];\n      var counter = 0;\n      var remaining = 1;\n      iterate(iterable, function (promise) {\n        var index = counter++;\n        var alreadyCalled = false;\n        remaining++;\n        call($promiseResolve, C, promise).then(function (value) {\n          if (alreadyCalled) return;\n          alreadyCalled = true;\n          values[index] = value;\n          --remaining || resolve(values);\n        }, reject);\n      });\n      --remaining || resolve(values);\n    });\n    if (result.error) reject(result.value);\n    return capability.promise;\n  }\n});\n"]},"metadata":{},"sourceType":"script"}