{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: \"viewLogin\",\n  data: function data() {\n    return {\n      registerForm: {\n        studentnum: \"\",\n        username: \"\",\n        password: \"\" // studentnum: \"11811202\",\n        // username: \"admin\",\n        // password: \"123456\",\n\n      },\n      loading: false,\n      pwdType: \"password\"\n    };\n  },\n  methods: {\n    showPwd: function showPwd() {\n      if (this.pwdType === \"password\") {\n        this.pwdType = \"\";\n      } else {\n        this.pwdType = \"password\";\n      }\n    },\n    handleRegister: function handleRegister() {\n      this.$router.push({\n        path: \"/login\"\n      }); // this.$refs.loginForm.validate(valid => {\n      //     if (valid) {\n      //         this.loading = true;\n      //         this.$store\n      //             .dispatch(\"Login\", this.loginForm)\n      //             .then(response => {\n      //                 this.loading = false;\n      //                 let code = response.data.code;\n      //                 if (code == 200) {\n      //                     this.$router.push({\n      //                         path: \"/success\",\n      //                         query: {\n      //                             data: response.data.data\n      //                         }\n      //                     });\n      //                 } else {\n      //                     this.$router.push({\n      //                         path: \"/fail\",\n      //                         query: {\n      //                             message: response.data.message\n      //                         }\n      //                     });\n      //                 }\n      //             })\n      //             .catch(() => {\n      //                 this.loading = false;\n      //             });\n      //     } else {\n      //         // eslint-disable-next-line no-console\n      //         console.log(\"参数验证不合法！\");\n      //         return false;\n      //     }\n      // });\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwDA;AACAA,mBADA;AAEAC,MAFA,kBAEA;AACA;AACAC;AACAC,sBADA;AAEAC,oBAFA;AAGAC,oBAHA,CAIA;AACA;AACA;;AANA,OADA;AASAC,oBATA;AAUAC;AAVA;AAYA,GAfA;AAgBAC;AACAC,WADA,qBACA;AACA;AACA;AACA,OAFA,MAEA;AACA;AACA;AACA,KAPA;AAQAC,kBARA,4BAQA;AACA;AACAC;AADA,SADA,CAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA7CA;AAhBA","names":["name","data","registerForm","studentnum","username","password","loading","pwdType","methods","showPwd","handleRegister","path"],"sourceRoot":"views/Login","sources":["register.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <el-card class=\"login-form-layout\">\r\n            <el-form autocomplete=\"on\" :model=\"loginForm\" ref=\"registerForm\" label-position=\"left\">\r\n                <div style=\"text-align: center\">\r\n                    <svg-icon icon-class=\"login-mall\" style=\"width: 56px;height: 56px;color: #409EFF\"></svg-icon>\r\n                </div>\r\n                <h2 class=\"login-title color-main\">注册页面</h2>\r\n                <el-form-item prop=\"studentnum\">\r\n                    <el-input name=\"studentnum\" type=\"text\" v-model=\"registerForm.username\" autocomplete=\"on\"\r\n                        placeholder=\"请输入学号\">\r\n                        <span slot=\"prefix\">\r\n                            <svg-icon icon-class=\"user\" class=\"color-main\"></svg-icon>\r\n                        </span>\r\n                    </el-input>\r\n                </el-form-item>\r\n                <el-form-item prop=\"username\">\r\n                    <el-input name=\"username\" type=\"text\" v-model=\"registerForm.username\" autocomplete=\"on\"\r\n                        placeholder=\"请输入用户名\">\r\n                        <span slot=\"prefix\">\r\n                            <svg-icon icon-class=\"user\" class=\"color-main\"></svg-icon>\r\n                        </span>\r\n                    </el-input>\r\n                </el-form-item>\r\n                <el-form-item prop=\"password\">\r\n                    <el-input name=\"password\" :type=\"pwdType\" @keyup.enter.native=\"handleRegister\"\r\n                        v-model=\"registerForm.password\" autocomplete=\"on\" placeholder=\"请输入密码\">\r\n                        <span slot=\"prefix\">\r\n                            <svg-icon icon-class=\"password\" class=\"color-main\"></svg-icon>\r\n                        </span>\r\n                        <span slot=\"suffix\" @click=\"showPwd\">\r\n                            <svg-icon icon-class=\"eye\" class=\"color-main\"></svg-icon>\r\n                        </span>\r\n                    </el-input>\r\n                </el-form-item>\r\n                <el-form-item prop=\"password\">\r\n                    <el-input name=\"password\" :type=\"pwdType\" @keyup.enter.native=\"handleRegister\"\r\n                        v-model=\"registerForm.password\" autocomplete=\"on\" placeholder=\"请重复密码\">\r\n                        <span slot=\"prefix\">\r\n                            <svg-icon icon-class=\"password\" class=\"color-main\"></svg-icon>\r\n                        </span>\r\n                        <span slot=\"suffix\" @click=\"showPwd\">\r\n                            <svg-icon icon-class=\"eye\" class=\"color-main\"></svg-icon>\r\n                        </span>\r\n                    </el-input>\r\n                </el-form-item>\r\n                <el-form-item style=\"margin-bottom: 60px\">\r\n                    <el-button style=\"width: 100%\" type=\"primary\" :loading=\"loading\"\r\n                        @click.native.prevent=\"handleRegister\">注册</el-button>\r\n                </el-form-item>\r\n            </el-form>\r\n        </el-card>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        name: \"viewLogin\",\r\n        data() {\r\n            return {\r\n                registerForm: {\r\n                    studentnum: \"\",\r\n                    username: \"\",\r\n                    password: \"\",\r\n                    // studentnum: \"11811202\",\r\n                    // username: \"admin\",\r\n                    // password: \"123456\",\r\n                },\r\n                loading: false,\r\n                pwdType: \"password\",\r\n            };\r\n        },\r\n        methods: {\r\n            showPwd() {\r\n                if (this.pwdType === \"password\") {\r\n                    this.pwdType = \"\";\r\n                } else {\r\n                    this.pwdType = \"password\";\r\n                }\r\n            },\r\n            handleRegister() {\r\n                this.$router.push({\r\n                    path: \"/login\",\r\n                });\r\n                // this.$refs.loginForm.validate(valid => {\r\n                //     if (valid) {\r\n                //         this.loading = true;\r\n                //         this.$store\r\n                //             .dispatch(\"Login\", this.loginForm)\r\n                //             .then(response => {\r\n                //                 this.loading = false;\r\n                //                 let code = response.data.code;\r\n                //                 if (code == 200) {\r\n                //                     this.$router.push({\r\n                //                         path: \"/success\",\r\n                //                         query: {\r\n                //                             data: response.data.data\r\n                //                         }\r\n                //                     });\r\n                //                 } else {\r\n                //                     this.$router.push({\r\n                //                         path: \"/fail\",\r\n                //                         query: {\r\n                //                             message: response.data.message\r\n                //                         }\r\n                //                     });\r\n                //                 }\r\n                //             })\r\n                //             .catch(() => {\r\n                //                 this.loading = false;\r\n                //             });\r\n                //     } else {\r\n                //         // eslint-disable-next-line no-console\r\n                //         console.log(\"参数验证不合法！\");\r\n                //         return false;\r\n                //     }\r\n                // });\r\n            }\r\n        }\r\n    };\r\n</script>\r\n\r\n<style scoped>\r\n    .login-form-layout {\r\n        position: absolute;\r\n        left: 0;\r\n        right: 0;\r\n        width: 360px;\r\n        margin: 140px auto;\r\n        border-top: 10px solid #409eff;\r\n    }\r\n\r\n    .login-title {\r\n        text-align: center;\r\n    }\r\n\r\n    .login-center-layout {\r\n        background: #409eff;\r\n        width: auto;\r\n        height: auto;\r\n        max-width: 100%;\r\n        max-height: 100%;\r\n        margin-top: 200px;\r\n    }\r\n\r\n    a {\r\n        text-align: center;\r\n        text-decoration: none;\r\n    }\r\n</style>"]},"metadata":{},"sourceType":"module"}