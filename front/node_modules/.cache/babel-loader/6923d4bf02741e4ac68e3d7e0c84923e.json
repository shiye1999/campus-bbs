{"ast":null,"code":"'use strict';\n\nvar $ = require('../internals/export');\n\nvar IS_PURE = require('../internals/is-pure');\n\nvar FORCED_PROMISE_CONSTRUCTOR = require('../internals/promise-constructor-detection').CONSTRUCTOR;\n\nvar NativePromiseConstructor = require('../internals/promise-native-constructor');\n\nvar getBuiltIn = require('../internals/get-built-in');\n\nvar isCallable = require('../internals/is-callable');\n\nvar redefine = require('../internals/redefine');\n\nvar NativePromisePrototype = NativePromiseConstructor && NativePromiseConstructor.prototype; // `Promise.prototype.catch` method\n// https://tc39.es/ecma262/#sec-promise.prototype.catch\n\n$({\n  target: 'Promise',\n  proto: true,\n  forced: FORCED_PROMISE_CONSTRUCTOR,\n  real: true\n}, {\n  'catch': function (onRejected) {\n    return this.then(undefined, onRejected);\n  }\n}); // makes sure that native promise-based APIs `Promise#catch` properly works with patched `Promise#then`\n\nif (!IS_PURE && isCallable(NativePromiseConstructor)) {\n  var method = getBuiltIn('Promise').prototype['catch'];\n\n  if (NativePromisePrototype['catch'] !== method) {\n    redefine(NativePromisePrototype, 'catch', method, {\n      unsafe: true\n    });\n  }\n}","map":{"version":3,"sources":["E:/gitTest/campus-bbs/front/node_modules/_core-js@3.22.1@core-js/modules/es.promise.catch.js"],"names":["$","require","IS_PURE","FORCED_PROMISE_CONSTRUCTOR","CONSTRUCTOR","NativePromiseConstructor","getBuiltIn","isCallable","redefine","NativePromisePrototype","prototype","target","proto","forced","real","onRejected","then","undefined","method","unsafe"],"mappings":"AAAA;;AACA,IAAIA,CAAC,GAAGC,OAAO,CAAC,qBAAD,CAAf;;AACA,IAAIC,OAAO,GAAGD,OAAO,CAAC,sBAAD,CAArB;;AACA,IAAIE,0BAA0B,GAAGF,OAAO,CAAC,4CAAD,CAAP,CAAsDG,WAAvF;;AACA,IAAIC,wBAAwB,GAAGJ,OAAO,CAAC,yCAAD,CAAtC;;AACA,IAAIK,UAAU,GAAGL,OAAO,CAAC,2BAAD,CAAxB;;AACA,IAAIM,UAAU,GAAGN,OAAO,CAAC,0BAAD,CAAxB;;AACA,IAAIO,QAAQ,GAAGP,OAAO,CAAC,uBAAD,CAAtB;;AAEA,IAAIQ,sBAAsB,GAAGJ,wBAAwB,IAAIA,wBAAwB,CAACK,SAAlF,C,CAEA;AACA;;AACAV,CAAC,CAAC;AAAEW,EAAAA,MAAM,EAAE,SAAV;AAAqBC,EAAAA,KAAK,EAAE,IAA5B;AAAkCC,EAAAA,MAAM,EAAEV,0BAA1C;AAAsEW,EAAAA,IAAI,EAAE;AAA5E,CAAD,EAAqF;AACpF,WAAS,UAAUC,UAAV,EAAsB;AAC7B,WAAO,KAAKC,IAAL,CAAUC,SAAV,EAAqBF,UAArB,CAAP;AACD;AAHmF,CAArF,CAAD,C,CAMA;;AACA,IAAI,CAACb,OAAD,IAAYK,UAAU,CAACF,wBAAD,CAA1B,EAAsD;AACpD,MAAIa,MAAM,GAAGZ,UAAU,CAAC,SAAD,CAAV,CAAsBI,SAAtB,CAAgC,OAAhC,CAAb;;AACA,MAAID,sBAAsB,CAAC,OAAD,CAAtB,KAAoCS,MAAxC,EAAgD;AAC9CV,IAAAA,QAAQ,CAACC,sBAAD,EAAyB,OAAzB,EAAkCS,MAAlC,EAA0C;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAA1C,CAAR;AACD;AACF","sourcesContent":["'use strict';\nvar $ = require('../internals/export');\nvar IS_PURE = require('../internals/is-pure');\nvar FORCED_PROMISE_CONSTRUCTOR = require('../internals/promise-constructor-detection').CONSTRUCTOR;\nvar NativePromiseConstructor = require('../internals/promise-native-constructor');\nvar getBuiltIn = require('../internals/get-built-in');\nvar isCallable = require('../internals/is-callable');\nvar redefine = require('../internals/redefine');\n\nvar NativePromisePrototype = NativePromiseConstructor && NativePromiseConstructor.prototype;\n\n// `Promise.prototype.catch` method\n// https://tc39.es/ecma262/#sec-promise.prototype.catch\n$({ target: 'Promise', proto: true, forced: FORCED_PROMISE_CONSTRUCTOR, real: true }, {\n  'catch': function (onRejected) {\n    return this.then(undefined, onRejected);\n  }\n});\n\n// makes sure that native promise-based APIs `Promise#catch` properly works with patched `Promise#then`\nif (!IS_PURE && isCallable(NativePromiseConstructor)) {\n  var method = getBuiltIn('Promise').prototype['catch'];\n  if (NativePromisePrototype['catch'] !== method) {\n    redefine(NativePromisePrototype, 'catch', method, { unsafe: true });\n  }\n}\n"]},"metadata":{},"sourceType":"script"}